import pygame
import random
import os

WIDTH = 800
HEIGHT = 600
FPS = 30
GROUND = HEIGHT
SLOW = 3
FAST = 8

PLAYER_ACC = 0.5
PLAYER_FRICTION = -0.12
PLAYER_GRAV = 0.5
vec = pygame.math.Vector2

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
GRAY = (165, 165, 165)

game_folder = os.path.dirname(__file__)
img_folder = os.path.join(game_folder, "Banana__Jump__Pictures")

class Player(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(os.path.join(img_folder, "monkey.png")).convert()
        self.image = pygame.transform.scale(self.image, (300, 150))
        self.image.set_colorkey(WHITE)
        self.rect = self.image.get_rect()
        self.radius = 20
        self.rect.centerx = WIDTH / 2
        self.rect.bottom = HEIGHT - 10
        self.speedx = 0
        self.shield = 100
        self.shoot_delay = 250
        self.last_shot = pygame.time.get_ticks()

        self.pos = vec(10, GROUND - 60)
        self.vel = vec(0, 0)
        self.acc = vec(0, 0)



    def update(self):
        self.speedx = 0

        self.acc = vec(0, PLAYER_GRAV)

        keystate = pygame.key.get_pressed()
        if keystate[pygame.K_RIGHT]:
            self.acc.x += 2
        if keystate[pygame.K_LEFT]:
            self.acc.x += -2
        if self.pos.y >= GROUND and keystate[pygame.K_UP]:
            self.vel.y = -20
        if keystate[pygame.K_SPACE]:
            self.shoot()

        self.rect.x += self.speedx
        
        self.acc.x += self.vel.x * PLAYER_FRICTION

        self.vel += self.acc
        self.pos += self.vel + 0.5  *  self.acc

        if self.pos.x > WIDTH:
             self.pos.x = 0
        if self.pos.x < 0:
             self.pos.x = WIDTH

        if self.pos.y > GROUND:
             self.pos.y = GROUND + 1
             self.vel.y = 0

        self.rect.midbottom = self.pos

    def shoot(self):
            now = pygame.time.get_ticks()
            if now - self.last_shot >self.shoot_delay:
                self.last_shot = now
                rocket = Rocket(self.rect.right, self.rect.centery)
                all_sprites.add(rocket)
                rockets.add(rocket)

class Rocket(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(os.path.join(img_folder, "Rocket0.png")).convert()
        self.image = pygame.transform.scale(self.image, (100, 50))
        self.image.set_colorkey(GRAY)

        self.rect = self.image.get_rect()
        self.rect.bottom = y
        self.rect.centerx = x
        self.speedx = 10

    def update(self):
        self.rect.x += self.speedx
        if self.rect.left > WIDTH:
            self.kill()

class Platform(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(os.path.join(img_folder, "brown-rectangle.png")).convert()
        self.image = pygame.transform.scale(self.image, (200, 50))
        self.image.set_colorkey(WHITE)
        self.rect = self.image.get_rect()
        self.rect.center = (600, 500)
        self.y_speed = 5

        self.pos = vec(10, GROUND - 60)
        self.vel = vec(0, 0)
        self.acc = vec(0, 0)
        
    def update(self):
        self.rect.x += -10

        if self.rect.right < 0:
            self.rect.left = WIDTH

pygame.init()
pygame.mixer.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Banana Jump")

clock = pygame.time.Clock()

all_sprites = pygame.sprite.Group()
rockets = pygame.sprite.Group()
player = Player()
all_sprites.add(player)

platform = Platform()
all_sprites.add(platform)

bkgr_image = pygame.image.load(os.path.join(img_folder, "Jungle-Background.png")).convert()
background = pygame.transform.scale(bkgr_image, (WIDTH, HEIGHT))
background_rect = background.get_rect()

running = True
while running:
    
    clock.tick(FPS)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    all_sprites.update()
                
    screen.blit(background, background_rect)
    all_sprites.draw(screen)

    pygame.display.flip()

pygame.quit()
